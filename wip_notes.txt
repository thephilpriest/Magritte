Copyright 2024, 2025 Philip S. Priest

This file is part of Magritte.

Magritte is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
Magritte is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
You should have received a copy of the GNU General Public License along with Magritte. If not, see <https://www.gnu.org/licenses/>.

1. it is not possible for a smidgeon to see that things in front of it have any intentions, it is only possible to see their state (velocity and ins_acc)

2. The smidgeons are not aware of their location. 

3. The pipe knows the location of each smidgeon

4. There are 2 passes for each time slice
	1. Determine the action for each smidgeon
                fueled by their reactive value
	2. Take the action for each smidgeon
8. we want to take multiple passes per time slice.

5. What units will we be using here?
	metric
                MM and MS

6. Tailgating is derived by asserting ideal_following_distance as a quantity of milliseconds.

7. each cycle needs to be a function of how much time the user says each cycle covers and the speed limit

8. time is in milliseconds and every smidgeon had a counter for
"next time to set intention" and that every time there's a wake-up each smidgeon should decrement that counter
by the  number of ms that passed and then set/reset an intention accordingly

----Thoughts on setting of intentions----
set_intention
        inputs
                my current velocity
                the position of my tip
                the position of the end of the next smidgeon
                        This can be used to know the distance
                min okay follow distance
                tailgatiness
                        feeding into get_inst_min_okay_follow_distance
                patience
                acceleratiness
                deceleratiness
                speederiness
                erraticness
                max acceleration
                max deceleration
                velocity_limit
        output
                accelerate this would be a positive integer
                        stomping the gas on a typical car whose max acceleration is 7 would yield a value of 7
                                But,  most people don't do that
                decelerate this would be a negative integer
                status quoA this would be 0

9. Imagine that a smidgeon is a typical car on that the pipe is a typical 1 lane road
        A typical car can accelerate at about 0.6 to 0.9 Gs
        I am setting the mean_max_acceleration for the smidgeons to 7
        I am setting the std_dev for max acceleration to 1
        v = vâ‚€ + at ; I think we can just use that as is.
        Gravity is 9.8 M/S2 -> 0.00980665 Millimeters Per Millisecond Squared

         https://www.justintools.com/unit-conversion/acceleration.php?k1=standard-gravity&k2=meters-per-millisecond-squared#google_vignette